@page "/addrecipe"
@using BlazorCRUD.Shared.Model
@inject HttpClient httpClient
@inject NavigationManager UriHelper

<h3>AddRecipe</h3>
<Container>
    <Row>
        <Form>
            <Row>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is2">Name</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Margin="Margin.Is4.OnX" Placeholder="Some text value..." @bind-Text="@receipe.ReceipeName" />
                    </FieldBody>
                </Field>
            </Row>
            <Row>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is2">Ingredients</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Margin="Margin.Is4.OnX" Placeholder="Some text value..." @bind-Text="@receipe.Ingredients" />
                    </FieldBody>
                </Field>
            </Row>
            <Row>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is2">Description</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Margin="Margin.Is4.OnX" Placeholder="Some text value..." @bind-Text="@receipe.Description" />
                    </FieldBody>
                </Field>
            </Row>
            <Row>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is2">Notes</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Margin="Margin.Is4.OnX" Placeholder="Some text value..." @bind-Text="@receipe.Notes" />
                    </FieldBody>
                </Field>
            </Row>
            <Row>
                <Field Horizontal="true" JustifyContent="JustifyContent.End">
                    <FieldLabel ColumnSize="ColumnSize.Is2"></FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <Button Color="Color.Primary" Clicked="@Submit">Submit</Button>
                    </FieldBody>
                </Field>
            </Row>
        </Form>
    </Row>
    <Row>
        <Label>@submitStatus</Label>
    </Row>
    <Row>
        <FecthRecipe @ref="fetchReceipe" />
    </Row>
</Container>
@code {

    Receipe receipe = new Receipe();
    FecthRecipe fetchReceipe;
    string submitStatus=string.Empty;
    string opType = "add";
    protected override void OnAfterRender(bool firstRender)
    {
        fetchReceipe.OnReceipeModify = OnModify;
    }
    public async Task Submit()
    {
        var baseUri = UriHelper.BaseUri.ToString();
        var response = await httpClient.PostAsJsonAsync<Receipe>($"{baseUri}api/Receipe", receipe);
        if (response.IsSuccessStatusCode)
        {
            submitStatus = "Receipe added successfully";
            var newReceipe = await response.Content.ReadFromJsonAsync<Receipe>();
            fetchReceipe.AddNewReceipe(newReceipe);
        }
        else
            submitStatus = response.ReasonPhrase;
    }
    private void OnModify(Receipe modReceipe)
    {
        receipe = modReceipe;
        opType = "mod";
        StateHasChanged();

    }

}
